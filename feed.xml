<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://tuckerthomas.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tuckerthomas.com/" rel="alternate" type="text/html" /><updated>2019-11-27T16:25:03-05:00</updated><id>https://tuckerthomas.com/feed.xml</id><title type="html">My Personal Blog for Projects and Things</title><subtitle>Tucker Thomas' Website for their blog and other ineteresting projects.</subtitle><entry><title type="html">Setting Up Email Forwarding</title><link href="https://tuckerthomas.com/software/tutorial/2019/09/08/Setting-Up-Email-Forwarding.html" rel="alternate" type="text/html" title="Setting Up Email Forwarding" /><published>2019-09-08T02:08:22-04:00</published><updated>2019-09-08T02:08:22-04:00</updated><id>https://tuckerthomas.com/software/tutorial/2019/09/08/Setting-Up-Email-Forwarding</id><content type="html" xml:base="https://tuckerthomas.com/software/tutorial/2019/09/08/Setting-Up-Email-Forwarding.html">&lt;h3 id=&quot;third-party-email-forwarders&quot;&gt;Third Party Email Forwarders&lt;/h3&gt;
&lt;p&gt;In looking for a solution to utilize email forwarding, I found that Comcast (and most other internet service providers) block port 22 on resident networks. To receive or send any sort of email on a resident network there are two options: upgrade to business class internet or use a third party service for email.&lt;/p&gt;

&lt;p&gt;So, that brings me to finding such a service.&lt;/p&gt;

&lt;p&gt;The one I landed on was &lt;a href=&quot;https://forwardemail.net/&quot;&gt;ForwardMail&lt;/a&gt;. It’s free, open source and has a small following already. Now, there are some pros and cons to using a third party, specifically forwardmail, I’ll list a few of them below.&lt;/p&gt;

&lt;h4 id=&quot;pros&quot;&gt;Pros&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Relies only on DNS (could be a con, depends on the person)&lt;/li&gt;
  &lt;li&gt;Don’t have to deal with any networking/hosting&lt;/li&gt;
  &lt;li&gt;Privacy, Forwardmail claims they don’t log anything&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cons&quot;&gt;Cons&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Privacy, up to you to trust them&lt;/li&gt;
  &lt;li&gt;Forwardmail hosts the service, if they go down there’s not much to be done&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt;
&lt;p&gt;If you’d like to read through the documentation yourself, I’ll link it &lt;a href=&quot;https://forwardemail.net/#/?id=how-it-works&quot;&gt;here&lt;/a&gt;. Otherwise, feel free to continue reading.&lt;/p&gt;

&lt;h4 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h4&gt;
&lt;p&gt;Like normal MX DNS entries, they point to which servers handle the domain’s mail. We’ll set these to forwardemail’s so they can handle the mail for us.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name/Host/Alias&lt;/th&gt;
      &lt;th&gt;TTL&lt;/th&gt;
      &lt;th&gt;Record Type&lt;/th&gt;
      &lt;th&gt;Priority&lt;/th&gt;
      &lt;th&gt;Value/Answer/Destination&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@ or leave blank&lt;/td&gt;
      &lt;td&gt;3600&lt;/td&gt;
      &lt;td&gt;MX&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mx1.forwardemail.net&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to tell forwardemail what addresses to handle and where to forward them to. Forwardmail will lookup the txt entry and configure their service depending on what is entered. This will email all emails to the forwarded address &lt;code class=&quot;highlighter-rouge&quot;&gt;example_email@gmail.com&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name/Host/Alias&lt;/th&gt;
      &lt;th&gt;TTL&lt;/th&gt;
      &lt;th&gt;Record Type&lt;/th&gt;
      &lt;th&gt;Value/Answer/Destination&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@ or leave blank&lt;/td&gt;
      &lt;td&gt;3600&lt;/td&gt;
      &lt;td&gt;TXT&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;forward-email=example_email@gmail.com&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you’d only like to send emails to say contact@customdomain.com use the setting below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name/Host/Alias&lt;/th&gt;
      &lt;th&gt;TTL&lt;/th&gt;
      &lt;th&gt;Record Type&lt;/th&gt;
      &lt;th&gt;Value/Answer/Destination&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@ or leave blank&lt;/td&gt;
      &lt;td&gt;3600&lt;/td&gt;
      &lt;td&gt;TXT&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;forward-email=contact:example_email@gmail.com&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Finally, we need to setup SPF verification or Sender Policy Framework verification. Basically, we use this to verify that the email is origination from our domain and that it’s legitimate.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name/Host/Alias&lt;/th&gt;
      &lt;th&gt;TTL&lt;/th&gt;
      &lt;th&gt;Record Type&lt;/th&gt;
      &lt;th&gt;Value/Answer/Destination&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@ or leave blank&lt;/td&gt;
      &lt;td&gt;3600&lt;/td&gt;
      &lt;td&gt;TXT&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v=spf1 a mx include:spf.forwardemail.net -all&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;using-gmail&quot;&gt;Using Gmail&lt;/h3&gt;
&lt;p&gt;With that, email forwarding is setup and sending emails to &lt;code class=&quot;highlighter-rouge&quot;&gt;example_email@gmail.com&lt;/code&gt;. Now, if you’d like to respond to the emails from gmail and use the custom domain’s email address you can follow this &lt;a href=&quot;https://forwardemail.net/#/?id=send-mail-as-using-gmail&quot;&gt;guide&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="email" /><category term="gmail" /><category term="email forwarding" /><category term="dns" /><category term="custom domain" /><category term="comcast sucks" /><category term="forwardmail" /><summary type="html">Third Party Email Forwarders In looking for a solution to utilize email forwarding, I found that Comcast (and most other internet service providers) block port 22 on resident networks. To receive or send any sort of email on a resident network there are two options: upgrade to business class internet or use a third party service for email.</summary></entry><entry><title type="html">Using Github Pages</title><link href="https://tuckerthomas.com/software/tutorial/2019/08/13/Using-Github-Pages.html" rel="alternate" type="text/html" title="Using Github Pages" /><published>2019-08-13T21:38:11-04:00</published><updated>2019-08-13T21:38:11-04:00</updated><id>https://tuckerthomas.com/software/tutorial/2019/08/13/Using-Github-Pages</id><content type="html" xml:base="https://tuckerthomas.com/software/tutorial/2019/08/13/Using-Github-Pages.html">&lt;p&gt;Github Pages hosts a static site within a Github repository and then allows Github to host the site. You can use these sites for individual projects or even as a living resume and blog (my current plan).&lt;/p&gt;

&lt;p&gt;For more information, check Github Pages’ &lt;a href=&quot;https://pages.github.com/&quot;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For generating a static site, there’s plenty of tools. Really, just search ‘static site generator’ and you’ll find an abundance of tools. I decided to go with a well supported tool called &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;jekyll-setup&quot;&gt;Jekyll Setup&lt;/h3&gt;
&lt;p&gt;Jekyll was written in ruby and was rather simple to install. If you’ve used python and virtual-env &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; is right up your alley. It automatically manages ruby versions and switches based on a local &lt;code class=&quot;highlighter-rouge&quot;&gt;.ruby-version&lt;/code&gt; file instead of local binaries like virtual-env.&lt;/p&gt;

&lt;p&gt;Once you’ve determined if you want to install rbenv, you can follow this guide like installing ruby gems.&lt;/p&gt;

&lt;p&gt;Next we’ll install jekyll and bundle gems.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And initialize a new static site ‘My Blog’&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a folder with everything we need inside of it.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once inside, you can generate or build the site with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternatively, if you want to host the site locally with the added benefit of hot-reloading&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When building, this will generate the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder. This is where all the static files will be placed, so that we can serve them in the future.&lt;/p&gt;

&lt;h3 id=&quot;putting-it-all-together&quot;&gt;Putting it All Together&lt;/h3&gt;

&lt;p&gt;So, the way Github Pages works is that it pulls from the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch of the user’s &lt;code class=&quot;highlighter-rouge&quot;&gt;user.github.io&lt;/code&gt; repository and serves that on a web server. Since we’re using a static site generator we need to host the source/template files on another branch.&lt;/p&gt;

&lt;p&gt;The cleanest way that I’ve seen and will suggest, is to put the source files onto a &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; branch and then put the generated &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder onto the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;When initializing the new jekyll site, make sure that a &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file is created with the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; added to it. This will allow us to not track the generated site and initialize another git repo within the folder.&lt;/p&gt;

&lt;p&gt;Basically, within the &lt;code class=&quot;highlighter-rouge&quot;&gt;myblog&lt;/code&gt; folder&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git init
git remote add origin https://github.com/user/repo.git
git checkout -b sources
git add *
git push origin sources
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, within the &lt;code class=&quot;highlighter-rouge&quot;&gt;myblog/_site&lt;/code&gt; folder&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git init
git remote add origin https://github.com/user/repo.git
git add *
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Anyway, once that is setup you can locally make any edits to the site on the &lt;code class=&quot;highlighter-rouge&quot;&gt;sources&lt;/code&gt; branch and push them as needed. When you want to actually update the site on Github Pages, push the generated &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder to the master branch from within the folder.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="ruby" /><category term="blog" /><category term="github pages" /><category term="custom domain" /><summary type="html">Github Pages hosts a static site within a Github repository and then allows Github to host the site. You can use these sites for individual projects or even as a living resume and blog (my current plan).</summary></entry></feed>